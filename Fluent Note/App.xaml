<Application x:Class="Fluent_Note.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"     
              xmlns:handycontrol="https://handyorg.github.io/handycontrol"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml"/>

                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>

                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="Wpf:TextFieldAssist.TextBoxViewMargin" Value="1,0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="CaretBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate/>
                    </Setter.Value>
                </Setter>
                <EventSetter Event="MouseDoubleClick" Handler="EventSetter_OnHandler"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True" Margin="0">
                                    <Grid>
                                        <ScrollViewer x:Name="PART_ContentHost" Style="{DynamicResource ScrollViewerNativeBaseStyle}" Focusable="False" Padding="0,4,0,0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="0"/>
                                        <TextBlock x:Name="Hint" IsHitTestVisible="False" Margin="0,2" Padding="10,0,5,0" Opacity="{Binding (Wpf:TextFieldAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}" Text="{Binding (Wpf:TextFieldAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center">
                                            <TextBlock.Visibility>
                                                <TemplateBinding Property="Text">
                                                    <TemplateBinding.Converter>
                                                        <Converters:TextFieldHintVisibilityConverter IsEmptyValue="Visible" IsNotEmptyValue="Hidden"/>
                                                    </TemplateBinding.Converter>
                                                </TemplateBinding>
                                            </TextBlock.Visibility>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                            </Grid>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True"/>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                    
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                            <Condition Property="IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
                
            </Style>
            <Style x:Key="TextBoxStyleHandy" TargetType="{x:Type TextBox}">
                <Setter Property="MinHeight" Value="30"/>
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                <Setter Property="handycontrol:BorderElement.CornerRadius" Value="4"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="Padding" Value="8,6"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (handycontrol:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" Margin="4" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Hidden" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="border" Value="0.4"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SecondaryBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FluentStyle" TargetType="{x:Type Controls:Tile}">
                <Setter Property="Width" Value="140"/>
                <Setter Property="Height" Value="140"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="TitleFontSize" Value="16"/>
                <Setter Property="CountFontSize" Value="28"/>
                <Setter Property="RenderTransformOrigin" Value="0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Controls:Tile}">
                            <Wpf:Card x:Name="borderp" Wpf:ShadowAssist.ShadowDepth="Depth1" Style="{DynamicResource CardStyle1}" UniformCornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Border x:Name="border1" Background="Transparent">
                                    </Border>
                                    <Border  x:Name="border" ClipToBounds="True"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <!--Border.BorderBrush>
                                            <VisualBrush Visual="{Binding ElementName=canvas}" Stretch="None"></VisualBrush>
                                        </-->

                                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">

                                                <ContentPresenter x:Name="contenido" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RecognizesAccessKey="True"/>
                                            
                                        </Grid>
                                    </Border>
                                    
                                    <!--local:Luz x:Name="canvas" ClipToBounds="True"></-->
                                </Grid>
                            </Wpf:Card>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">                                    
                                    <Setter Property="Background" TargetName="border1">
                                        <Setter.Value>
                                            <SolidColorBrush Color="White" Opacity="0.1"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="ButtonBase.Click"/>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border1">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                    
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FluentStyleLigth" TargetType="{x:Type Controls:Tile}">
                <Setter Property="Width" Value="140"/>
                <Setter Property="Height" Value="140"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="TitleFontSize" Value="16"/>
                <Setter Property="CountFontSize" Value="28"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Controls:Tile}">
                            <Wpf:Card x:Name="borderp" Style="{DynamicResource CardStyle1}" UniformCornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
                                <Grid>
                                    
                                    <Border x:Name="border"  ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <!--Border.BorderBrush>
                                            <VisualBrush Visual="{Binding ElementName=canvas}" Stretch="None"></VisualBrush>
                                        </-->
                                        <Grid>
                                            
                                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RecognizesAccessKey="True"/>
                                           
                                        </Grid>
                                    </Border>
                                    <Border x:Name="border1" Background="Transparent">
                                    </Border>
                                    <!--local:Luz x:Name="canvas" ClipToBounds="True"></-->
                                </Grid>
                            </Wpf:Card>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border1">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.12"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="ButtonBase.Click"/>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border1">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.23"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FluentStyle2" TargetType="{x:Type Controls:Tile}">
                <Setter Property="Width" Value="140"/>
                <Setter Property="Height" Value="140"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="TitleFontSize" Value="16"/>
                <Setter Property="CountFontSize" Value="28"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Controls:Tile}">
                            <Border x:Name="borderp" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Border x:Name="border" ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RecognizesAccessKey="True"/>
                                    </Border>
                                    <Border x:Name="border1" Background="Transparent"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="borderp">
                                        <Setter.Value>
                                            <SolidColorBrush Color="White" Opacity="0.1"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.23"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="ButtonBase.Click"/>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border1">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.2"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FluentStyle2Light" TargetType="{x:Type Controls:Tile}">
                <Setter Property="Width" Value="140"/>
                <Setter Property="Height" Value="140"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="TitleFontSize" Value="16"/>
                <Setter Property="CountFontSize" Value="28"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Controls:Tile}">
                            <Border x:Name="borderp" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Border x:Name="border" ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RecognizesAccessKey="True"/>
                                    </Border>
                                    <Border x:Name="border1" Background="Transparent"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border1">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FF000000" Opacity="0.2"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.23"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="ButtonBase.Click"/>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border1">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CardStyle1" TargetType="{x:Type Wpf:Card}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Wpf:Card}">
                            <Grid Background="Transparent" Margin="{TemplateBinding Margin}">
                                <Border CornerRadius="{TemplateBinding UniformCornerRadius}" >
                                    <Border x:Name="PART_ClipBorder" Background="{TemplateBinding Background}" Clip="{TemplateBinding ContentClip}" Padding="{TemplateBinding Padding}" />
                                </Border>
                                <ContentPresenter x:Name="ContentPresenter" Clip="{TemplateBinding ContentClip}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
            </Style>
            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ControlTemplate.Resources>
                                <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut"/>
                                <Storyboard x:Key="HideRipple">
                                    <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                        <DoubleAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Key="Unchecked">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="23.5"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Checked">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="ShowRipple">
                                    <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                        <DoubleAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                        <DoubleAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                        <DoubleAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Viewbox Width="34">
                                <Grid>
                                    <Rectangle x:Name="Track" Fill="Black" HorizontalAlignment="Left" Height="15" Margin="4.211,5,4.211,0" Opacity="0.26" RadiusY="7.5" RadiusX="7.5" Stroke="{x:Null}" VerticalAlignment="Top" Width="40"/>
                                    <Grid x:Name="ThumbHolder" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0" Y="0"/>
                                        </Grid.RenderTransform>
                                        <Ellipse x:Name="RippleThumb" Fill="{DynamicResource PrimaryHueLightBrush}" HorizontalAlignment="Center" Height="25" Margin="0" Opacity="0.26" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Width="25">
                                            <Ellipse.RenderTransform>
                                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                        <Ellipse x:Name="Thumb" Effect="{DynamicResource MaterialDesignShadowDepth1}" Fill="#FFFAFAFA" HorizontalAlignment="Center" Height="25" Margin="0" RenderTransformOrigin="0.5,0.5" Stroke="{x:Null}" VerticalAlignment="Center" Width="25"/>
                                    </Grid>
                                </Grid>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="23.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter Property="Fill" TargetName="Thumb" Value="{DynamicResource AccentColorBrush}"/>
                                    <Setter Property="Fill" TargetName="Track" Value="{DynamicResource PrimaryHueLightBrush}"/>
                                </Trigger>
                                <Trigger Property="Button.IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="Thumb" Value="#FFBDBDBD"/>
                                    <Setter Property="Fill" TargetName="Track">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Black" Opacity="0.12"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="MinHeight" Value="30"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SecondaryRegionBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource AccentColorBrush}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
